// Code generated by protoc-gen-go. DO NOT EDIT.
// source: facebook/download/friends.proto

package grain_facebook_download

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Friend struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Friend) Reset()                    { *m = Friend{} }
func (m *Friend) String() string            { return proto.CompactTextString(m) }
func (*Friend) ProtoMessage()               {}
func (*Friend) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Friend) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Friend) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type FriendsAdded struct {
	Friends []*Friend `protobuf:"bytes,1,rep,name=friends" json:"friends,omitempty"`
}

func (m *FriendsAdded) Reset()                    { *m = FriendsAdded{} }
func (m *FriendsAdded) String() string            { return proto.CompactTextString(m) }
func (*FriendsAdded) ProtoMessage()               {}
func (*FriendsAdded) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *FriendsAdded) GetFriends() []*Friend {
	if m != nil {
		return m.Friends
	}
	return nil
}

type RejectedRequests struct {
	RejectedRequests []*Friend `protobuf:"bytes,1,rep,name=rejected_requests,json=rejectedRequests" json:"rejected_requests,omitempty"`
}

func (m *RejectedRequests) Reset()                    { *m = RejectedRequests{} }
func (m *RejectedRequests) String() string            { return proto.CompactTextString(m) }
func (*RejectedRequests) ProtoMessage()               {}
func (*RejectedRequests) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *RejectedRequests) GetRejectedRequests() []*Friend {
	if m != nil {
		return m.RejectedRequests
	}
	return nil
}

type RemovedFriends struct {
	DeletedFriends []*Friend `protobuf:"bytes,1,rep,name=deleted_friends,json=deletedFriends" json:"deleted_friends,omitempty"`
}

func (m *RemovedFriends) Reset()                    { *m = RemovedFriends{} }
func (m *RemovedFriends) String() string            { return proto.CompactTextString(m) }
func (*RemovedFriends) ProtoMessage()               {}
func (*RemovedFriends) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *RemovedFriends) GetDeletedFriends() []*Friend {
	if m != nil {
		return m.DeletedFriends
	}
	return nil
}

type SentRequests struct {
	SentRequests []*Friend `protobuf:"bytes,1,rep,name=sent_requests,json=sentRequests" json:"sent_requests,omitempty"`
}

func (m *SentRequests) Reset()                    { *m = SentRequests{} }
func (m *SentRequests) String() string            { return proto.CompactTextString(m) }
func (*SentRequests) ProtoMessage()               {}
func (*SentRequests) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *SentRequests) GetSentRequests() []*Friend {
	if m != nil {
		return m.SentRequests
	}
	return nil
}

func init() {
	proto.RegisterType((*Friend)(nil), "grain.facebook.download.Friend")
	proto.RegisterType((*FriendsAdded)(nil), "grain.facebook.download.FriendsAdded")
	proto.RegisterType((*RejectedRequests)(nil), "grain.facebook.download.RejectedRequests")
	proto.RegisterType((*RemovedFriends)(nil), "grain.facebook.download.RemovedFriends")
	proto.RegisterType((*SentRequests)(nil), "grain.facebook.download.SentRequests")
}

func init() { proto.RegisterFile("facebook/download/friends.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xb1, 0x4b, 0x03, 0x31,
	0x18, 0xc5, 0x39, 0x2b, 0x95, 0x7e, 0x9e, 0xb5, 0x66, 0xf1, 0x06, 0xa1, 0x47, 0xa6, 0x9b, 0x52,
	0xd0, 0x49, 0x37, 0x41, 0x44, 0xc1, 0x29, 0x3a, 0xb9, 0x68, 0xda, 0xef, 0x55, 0x4e, 0x7b, 0x49,
	0x4d, 0xa2, 0xfe, 0xfb, 0xe2, 0x35, 0xa7, 0x22, 0x08, 0xed, 0x16, 0x1e, 0xef, 0xfd, 0xbe, 0x1f,
	0x84, 0xc6, 0x73, 0x33, 0xc3, 0xd4, 0xb9, 0x97, 0x09, 0xbb, 0x0f, 0xbb, 0x70, 0x86, 0x27, 0x73,
	0x5f, 0xc3, 0x72, 0x50, 0x4b, 0xef, 0xa2, 0x13, 0x87, 0x4f, 0xde, 0xd4, 0x56, 0x75, 0x35, 0xd5,
	0xd5, 0xe4, 0x19, 0xf5, 0x2f, 0xdb, 0xa6, 0x10, 0xb4, 0x6d, 0x4d, 0x83, 0x22, 0x2b, 0xb3, 0x6a,
	0xa0, 0xdb, 0xb7, 0x38, 0xa2, 0x41, 0xac, 0x1b, 0x84, 0x68, 0x9a, 0x65, 0xb1, 0x55, 0x66, 0x55,
	0x4f, 0xff, 0x04, 0xf2, 0x9a, 0xf2, 0xd5, 0x36, 0x9c, 0x33, 0x83, 0xc5, 0x29, 0xed, 0xa4, 0xab,
	0x45, 0x56, 0xf6, 0xaa, 0xdd, 0xe3, 0xb1, 0xfa, 0xe7, 0xac, 0x5a, 0xed, 0x74, 0xd7, 0x97, 0x8f,
	0x34, 0xd2, 0x78, 0xc6, 0x2c, 0x82, 0x35, 0x5e, 0xdf, 0x10, 0x62, 0x10, 0x37, 0x74, 0xe0, 0x53,
	0xf6, 0xe0, 0x53, 0xb8, 0x2e, 0x78, 0xe4, 0xff, 0xd0, 0xe4, 0x3d, 0x0d, 0x35, 0x1a, 0xf7, 0x0e,
	0x4e, 0xce, 0xe2, 0x8a, 0xf6, 0x19, 0x0b, 0x7c, 0xe1, 0x37, 0xd4, 0x1e, 0xa6, 0x5d, 0x22, 0xc9,
	0x3b, 0xca, 0x6f, 0x61, 0xe3, 0xb7, 0xf9, 0x05, 0xed, 0x05, 0xd8, 0xb8, 0xb1, 0x75, 0x1e, 0x7e,
	0x51, 0xa6, 0xfd, 0xf6, 0xeb, 0x4e, 0x3e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x67, 0x24, 0x75, 0xe3,
	0xdd, 0x01, 0x00, 0x00,
}
