// Code generated by protoc-gen-go. DO NOT EDIT.
// source: facebook/groups.proto

package grain_facebook

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GroupsYouManage struct {
	GroupsYouManage *GroupsYouManage_Group `protobuf:"bytes,1,opt,name=groups_you_manage,json=groupsYouManage" json:"groups_you_manage,omitempty"`
}

func (m *GroupsYouManage) Reset()                    { *m = GroupsYouManage{} }
func (m *GroupsYouManage) String() string            { return proto.CompactTextString(m) }
func (*GroupsYouManage) ProtoMessage()               {}
func (*GroupsYouManage) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *GroupsYouManage) GetGroupsYouManage() *GroupsYouManage_Group {
	if m != nil {
		return m.GroupsYouManage
	}
	return nil
}

type GroupsYouManage_Group struct {
	Groups []string `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
}

func (m *GroupsYouManage_Group) Reset()                    { *m = GroupsYouManage_Group{} }
func (m *GroupsYouManage_Group) String() string            { return proto.CompactTextString(m) }
func (*GroupsYouManage_Group) ProtoMessage()               {}
func (*GroupsYouManage_Group) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 0} }

func (m *GroupsYouManage_Group) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

// Stored as a top-level array
type GroupMembershipActivity struct {
	MembershipActivity []*GroupMembershipActivity_Group `protobuf:"bytes,1,rep,name=membership_activity,json=membershipActivity" json:"membership_activity,omitempty"`
}

func (m *GroupMembershipActivity) Reset()                    { *m = GroupMembershipActivity{} }
func (m *GroupMembershipActivity) String() string            { return proto.CompactTextString(m) }
func (*GroupMembershipActivity) ProtoMessage()               {}
func (*GroupMembershipActivity) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *GroupMembershipActivity) GetMembershipActivity() []*GroupMembershipActivity_Group {
	if m != nil {
		return m.MembershipActivity
	}
	return nil
}

type GroupMembershipActivity_Data struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GroupMembershipActivity_Data) Reset()                    { *m = GroupMembershipActivity_Data{} }
func (m *GroupMembershipActivity_Data) String() string            { return proto.CompactTextString(m) }
func (*GroupMembershipActivity_Data) ProtoMessage()               {}
func (*GroupMembershipActivity_Data) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1, 0} }

func (m *GroupMembershipActivity_Data) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GroupMembershipActivity_Attachment struct {
	Data []*GroupMembershipActivity_Data `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *GroupMembershipActivity_Attachment) Reset()         { *m = GroupMembershipActivity_Attachment{} }
func (m *GroupMembershipActivity_Attachment) String() string { return proto.CompactTextString(m) }
func (*GroupMembershipActivity_Attachment) ProtoMessage()    {}
func (*GroupMembershipActivity_Attachment) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{1, 1}
}

func (m *GroupMembershipActivity_Attachment) GetData() []*GroupMembershipActivity_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type GroupMembershipActivity_Group struct {
	Timestamp   int64                                 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Title       string                                `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Attachments []*GroupMembershipActivity_Attachment `protobuf:"bytes,3,rep,name=attachments" json:"attachments,omitempty"`
}

func (m *GroupMembershipActivity_Group) Reset()         { *m = GroupMembershipActivity_Group{} }
func (m *GroupMembershipActivity_Group) String() string { return proto.CompactTextString(m) }
func (*GroupMembershipActivity_Group) ProtoMessage()    {}
func (*GroupMembershipActivity_Group) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{1, 2}
}

func (m *GroupMembershipActivity_Group) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GroupMembershipActivity_Group) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GroupMembershipActivity_Group) GetAttachments() []*GroupMembershipActivity_Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

// Stored as a top-level array
type GroupPostsComments struct {
	Comments []*Post `protobuf:"bytes,1,rep,name=comments" json:"comments,omitempty"`
}

func (m *GroupPostsComments) Reset()                    { *m = GroupPostsComments{} }
func (m *GroupPostsComments) String() string            { return proto.CompactTextString(m) }
func (*GroupPostsComments) ProtoMessage()               {}
func (*GroupPostsComments) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *GroupPostsComments) GetComments() []*Post {
	if m != nil {
		return m.Comments
	}
	return nil
}

func init() {
	proto.RegisterType((*GroupsYouManage)(nil), "grain.facebook.GroupsYouManage")
	proto.RegisterType((*GroupsYouManage_Group)(nil), "grain.facebook.GroupsYouManage.Group")
	proto.RegisterType((*GroupMembershipActivity)(nil), "grain.facebook.GroupMembershipActivity")
	proto.RegisterType((*GroupMembershipActivity_Data)(nil), "grain.facebook.GroupMembershipActivity.Data")
	proto.RegisterType((*GroupMembershipActivity_Attachment)(nil), "grain.facebook.GroupMembershipActivity.Attachment")
	proto.RegisterType((*GroupMembershipActivity_Group)(nil), "grain.facebook.GroupMembershipActivity.Group")
	proto.RegisterType((*GroupPostsComments)(nil), "grain.facebook.GroupPostsComments")
}

func init() { proto.RegisterFile("facebook/groups.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x26, 0xfd, 0xc3, 0x4e, 0xc1, 0xe2, 0x5a, 0x6d, 0x08, 0x82, 0xa5, 0x20, 0xf4, 0xa0, 0x51,
	0xea, 0x0b, 0x58, 0x14, 0x3d, 0x55, 0x74, 0xf1, 0xe2, 0xc5, 0x32, 0x8d, 0x6b, 0x1a, 0x74, 0xb3,
	0x21, 0x99, 0x0a, 0x7d, 0x00, 0x1f, 0xc0, 0xc7, 0xf5, 0x26, 0x9d, 0x6c, 0x53, 0xdb, 0x7a, 0xe8,
	0x6d, 0xe7, 0x9b, 0xf9, 0x7e, 0x66, 0x19, 0x38, 0x78, 0xc3, 0x40, 0x8d, 0x8d, 0x79, 0x3f, 0x0f,
	0x53, 0x33, 0x4d, 0x32, 0x3f, 0x49, 0x0d, 0x19, 0xb1, 0x1b, 0xa6, 0x18, 0xc5, 0xfe, 0xa2, 0xe9,
	0xb5, 0x8b, 0xb1, 0xc0, 0x68, 0xad, 0x62, 0xb2, 0x83, 0xdd, 0x2f, 0x07, 0x9a, 0x77, 0xcc, 0x7c,
	0x36, 0xd3, 0x21, 0xc6, 0x18, 0x2a, 0xf1, 0x08, 0x7b, 0xb9, 0xd8, 0x68, 0x66, 0xa6, 0x23, 0xcd,
	0xa0, 0xeb, 0x74, 0x9c, 0x5e, 0xa3, 0x7f, 0xe2, 0xaf, 0x0a, 0xfb, 0x6b, 0xdc, 0xbc, 0x96, 0xcd,
	0x70, 0x15, 0xf6, 0x8e, 0xa1, 0xca, 0x1d, 0x71, 0x08, 0xb5, 0xbc, 0xe7, 0x3a, 0x9d, 0x72, 0xaf,
	0x2e, 0x6d, 0xd5, 0xfd, 0x29, 0x41, 0x9b, 0x27, 0x86, 0x4a, 0x8f, 0x55, 0x9a, 0x4d, 0xa2, 0x64,
	0x10, 0x50, 0xf4, 0x19, 0xd1, 0x4c, 0xbc, 0xc0, 0xbe, 0x2e, 0xd0, 0x11, 0x5a, 0x98, 0x05, 0x1a,
	0xfd, 0xb3, 0x7f, 0x13, 0x6d, 0xaa, 0xd8, 0x64, 0x42, 0x6f, 0x74, 0x3c, 0x0f, 0x2a, 0x37, 0x48,
	0x28, 0x04, 0x54, 0x62, 0xd4, 0xf9, 0xaa, 0x75, 0xc9, 0x6f, 0xef, 0x1e, 0x60, 0x40, 0x84, 0xc1,
	0x64, 0xfe, 0x69, 0xe2, 0x0a, 0x2a, 0xaf, 0x48, 0x68, 0xad, 0x4f, 0xb7, 0xb5, 0x9e, 0xab, 0x4b,
	0x66, 0x7a, 0xdf, 0xce, 0xe2, 0x27, 0x8e, 0xa0, 0x4e, 0x91, 0x56, 0x19, 0xa1, 0x4e, 0xd8, 0xb2,
	0x2c, 0x97, 0x80, 0x68, 0x41, 0x95, 0x22, 0xfa, 0x50, 0x6e, 0x89, 0xc3, 0xe4, 0x85, 0x78, 0x82,
	0x06, 0x16, 0x69, 0x32, 0xb7, 0xcc, 0x31, 0xfa, 0xdb, 0xc6, 0x58, 0x2e, 0x22, 0xff, 0xca, 0x74,
	0x6f, 0x41, 0x30, 0xe5, 0xc1, 0x64, 0x94, 0x5d, 0xdb, 0xfb, 0x10, 0x17, 0xb0, 0xb3, 0xb8, 0x15,
	0xbb, 0x6f, 0x6b, 0xdd, 0x68, 0x4e, 0x90, 0xc5, 0xd4, 0xb8, 0xc6, 0x27, 0x75, 0xf9, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0x06, 0xd6, 0x9e, 0x2f, 0x94, 0x02, 0x00, 0x00,
}
