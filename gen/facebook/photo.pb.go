// Code generated by protoc-gen-go. DO NOT EDIT.
// source: facebook/photo.proto

package facebookpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Album struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Album) Reset()                    { *m = Album{} }
func (m *Album) String() string            { return proto.CompactTextString(m) }
func (*Album) ProtoMessage()               {}
func (*Album) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Album) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Owner struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *Owner) Reset()                    { *m = Owner{} }
func (m *Owner) String() string            { return proto.CompactTextString(m) }
func (*Owner) ProtoMessage()               {}
func (*Owner) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Owner) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Owner) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Image struct {
	Height int32  `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Width  int32  `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Source string `protobuf:"bytes,3,opt,name=source" json:"source,omitempty"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Image) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Image) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Image) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type Photo struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Album *Album `protobuf:"bytes,2,opt,name=album" json:"album,omitempty"`
	// backdated_time = 3;
	// backdated_time_granularity = 4;
	CanBackdate bool     `protobuf:"varint,5,opt,name=can_backdate,json=canBackdate" json:"can_backdate,omitempty"`
	CanDelete   bool     `protobuf:"varint,6,opt,name=can_delete,json=canDelete" json:"can_delete,omitempty"`
	CanTag      bool     `protobuf:"varint,7,opt,name=can_tag,json=canTag" json:"can_tag,omitempty"`
	CreatedTime string   `protobuf:"bytes,8,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	From        *Owner   `protobuf:"bytes,10,opt,name=from" json:"from,omitempty"`
	Height      int32    `protobuf:"varint,11,opt,name=height" json:"height,omitempty"`
	Width       int32    `protobuf:"varint,12,opt,name=width" json:"width,omitempty"`
	Icon        string   `protobuf:"bytes,13,opt,name=icon" json:"icon,omitempty"`
	Images      []*Image `protobuf:"bytes,14,rep,name=images" json:"images,omitempty"`
}

func (m *Photo) Reset()                    { *m = Photo{} }
func (m *Photo) String() string            { return proto.CompactTextString(m) }
func (*Photo) ProtoMessage()               {}
func (*Photo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Photo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Photo) GetAlbum() *Album {
	if m != nil {
		return m.Album
	}
	return nil
}

func (m *Photo) GetCanBackdate() bool {
	if m != nil {
		return m.CanBackdate
	}
	return false
}

func (m *Photo) GetCanDelete() bool {
	if m != nil {
		return m.CanDelete
	}
	return false
}

func (m *Photo) GetCanTag() bool {
	if m != nil {
		return m.CanTag
	}
	return false
}

func (m *Photo) GetCreatedTime() string {
	if m != nil {
		return m.CreatedTime
	}
	return ""
}

func (m *Photo) GetFrom() *Owner {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Photo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Photo) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Photo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Photo) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func init() {
	proto.RegisterType((*Album)(nil), "grain.facebook.Album")
	proto.RegisterType((*Owner)(nil), "grain.facebook.Owner")
	proto.RegisterType((*Image)(nil), "grain.facebook.Image")
	proto.RegisterType((*Photo)(nil), "grain.facebook.Photo")
}

func init() { proto.RegisterFile("facebook/photo.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x6e, 0xe2, 0x30,
	0x10, 0x86, 0x45, 0xc0, 0x01, 0x26, 0x2c, 0x07, 0x8b, 0x5d, 0x7c, 0x59, 0x89, 0x72, 0xa2, 0x42,
	0x4d, 0xa5, 0xf6, 0x09, 0x8a, 0x7a, 0xe9, 0xa1, 0x6a, 0x15, 0x71, 0xea, 0x05, 0x4d, 0x9c, 0x21,
	0xb1, 0x20, 0x36, 0x0a, 0x46, 0xbc, 0x6d, 0x9f, 0xa5, 0xca, 0x10, 0x2a, 0x90, 0xb8, 0x79, 0xe6,
	0xff, 0x32, 0xf9, 0xfd, 0x8f, 0x61, 0xb4, 0x46, 0x4d, 0xa9, 0x73, 0x9b, 0xc7, 0x5d, 0xe1, 0xbc,
	0x8b, 0x77, 0x95, 0xf3, 0x4e, 0x0e, 0xf3, 0x0a, 0x8d, 0x8d, 0xcf, 0xda, 0x74, 0x0c, 0xe2, 0x65,
	0x9b, 0x1e, 0x4a, 0x39, 0x84, 0xc0, 0x64, 0xaa, 0x35, 0x69, 0xcd, 0xfa, 0x49, 0x60, 0xb2, 0xe9,
	0x1c, 0xc4, 0xc7, 0xd1, 0x52, 0x25, 0x25, 0x74, 0x2c, 0x96, 0xd4, 0x48, 0x7c, 0x6e, 0xe0, 0xe0,
	0x17, 0x7e, 0x07, 0xf1, 0x56, 0x62, 0x4e, 0xf2, 0x1f, 0x84, 0x05, 0x99, 0xbc, 0xf0, 0x8c, 0x8b,
	0xa4, 0xa9, 0xe4, 0x08, 0xc4, 0xd1, 0x64, 0xbe, 0xe0, 0x6f, 0x44, 0x72, 0x2a, 0x6a, 0x7a, 0xef,
	0x0e, 0x95, 0x26, 0xd5, 0xe6, 0x51, 0x4d, 0x35, 0xfd, 0x0e, 0x40, 0x7c, 0x16, 0x6c, 0xf7, 0xda,
	0x95, 0x9c, 0x83, 0xc0, 0xda, 0x2e, 0xcf, 0x89, 0x9e, 0xfe, 0xc6, 0xd7, 0xd7, 0x89, 0xf9, 0x2e,
	0xc9, 0x89, 0x91, 0x77, 0x30, 0xd0, 0x68, 0x57, 0x29, 0xea, 0x4d, 0x86, 0x9e, 0x94, 0x98, 0xb4,
	0x66, 0xbd, 0x24, 0xd2, 0x68, 0x17, 0x4d, 0x4b, 0xfe, 0x07, 0xa8, 0x91, 0x8c, 0xb6, 0xe4, 0x49,
	0x85, 0x0c, 0xf4, 0x35, 0xda, 0x57, 0x6e, 0xc8, 0x31, 0x74, 0x6b, 0xd9, 0x63, 0xae, 0xba, 0xac,
	0x85, 0x1a, 0xed, 0x12, 0x73, 0x1e, 0x5d, 0x11, 0x7a, 0xca, 0x56, 0xde, 0x94, 0xa4, 0x7a, 0xec,
	0x30, 0x6a, 0x7a, 0x4b, 0x53, 0x92, 0xbc, 0x87, 0xce, 0xba, 0x72, 0xa5, 0x82, 0xdb, 0x4e, 0x39,
	0xdc, 0x84, 0x91, 0x8b, 0xd4, 0xa2, 0xdb, 0xa9, 0x0d, 0x2e, 0x53, 0x93, 0xd0, 0x31, 0xda, 0x59,
	0xf5, 0xe7, 0xb4, 0x90, 0xfa, 0x2c, 0x1f, 0x20, 0x34, 0xf5, 0x02, 0xf6, 0x6a, 0x38, 0x69, 0xdf,
	0xfa, 0x1d, 0xaf, 0x27, 0x69, 0xa0, 0xc5, 0xe0, 0x0b, 0xce, 0xca, 0x2e, 0x4d, 0x43, 0x7e, 0x1a,
	0xcf, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xb2, 0x21, 0x34, 0x32, 0x02, 0x00, 0x00,
}
