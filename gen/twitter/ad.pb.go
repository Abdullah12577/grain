// Code generated by protoc-gen-go. DO NOT EDIT.
// source: twitter/ad.proto

package twitterpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DeviceInfo struct {
	OsType string `protobuf:"bytes,1,opt,name=osType" json:"osType,omitempty"`
}

func (m *DeviceInfo) Reset()                    { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string            { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()               {}
func (*DeviceInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *DeviceInfo) GetOsType() string {
	if m != nil {
		return m.OsType
	}
	return ""
}

type PromotedTweetInfo struct {
	TweetId   int64    `protobuf:"varint,1,opt,name=tweetId" json:"tweetId,omitempty"`
	TweetText string   `protobuf:"bytes,2,opt,name=tweetText" json:"tweetText,omitempty"`
	Urls      []string `protobuf:"bytes,3,rep,name=urls" json:"urls,omitempty"`
	MediaUrls []string `protobuf:"bytes,4,rep,name=mediaUrls" json:"mediaUrls,omitempty"`
}

func (m *PromotedTweetInfo) Reset()                    { *m = PromotedTweetInfo{} }
func (m *PromotedTweetInfo) String() string            { return proto.CompactTextString(m) }
func (*PromotedTweetInfo) ProtoMessage()               {}
func (*PromotedTweetInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *PromotedTweetInfo) GetTweetId() int64 {
	if m != nil {
		return m.TweetId
	}
	return 0
}

func (m *PromotedTweetInfo) GetTweetText() string {
	if m != nil {
		return m.TweetText
	}
	return ""
}

func (m *PromotedTweetInfo) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

func (m *PromotedTweetInfo) GetMediaUrls() []string {
	if m != nil {
		return m.MediaUrls
	}
	return nil
}

type AdvertiserInfo struct {
	AdvertiserName string `protobuf:"bytes,1,opt,name=advertiserName" json:"advertiserName,omitempty"`
	ScreenName     string `protobuf:"bytes,2,opt,name=screenName" json:"screenName,omitempty"`
}

func (m *AdvertiserInfo) Reset()                    { *m = AdvertiserInfo{} }
func (m *AdvertiserInfo) String() string            { return proto.CompactTextString(m) }
func (*AdvertiserInfo) ProtoMessage()               {}
func (*AdvertiserInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *AdvertiserInfo) GetAdvertiserName() string {
	if m != nil {
		return m.AdvertiserName
	}
	return ""
}

func (m *AdvertiserInfo) GetScreenName() string {
	if m != nil {
		return m.ScreenName
	}
	return ""
}

type MatchedTargetingCriteria struct {
	TargetingType  string `protobuf:"bytes,1,opt,name=targetingType" json:"targetingType,omitempty"`
	TargetingValue string `protobuf:"bytes,2,opt,name=targetingValue" json:"targetingValue,omitempty"`
}

func (m *MatchedTargetingCriteria) Reset()                    { *m = MatchedTargetingCriteria{} }
func (m *MatchedTargetingCriteria) String() string            { return proto.CompactTextString(m) }
func (*MatchedTargetingCriteria) ProtoMessage()               {}
func (*MatchedTargetingCriteria) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *MatchedTargetingCriteria) GetTargetingType() string {
	if m != nil {
		return m.TargetingType
	}
	return ""
}

func (m *MatchedTargetingCriteria) GetTargetingValue() string {
	if m != nil {
		return m.TargetingValue
	}
	return ""
}

type Impressions struct {
	DeviceInfo               *DeviceInfo                 `protobuf:"bytes,1,opt,name=deviceInfo" json:"deviceInfo,omitempty"`
	DisplayLocation          string                      `protobuf:"bytes,2,opt,name=displayLocation" json:"displayLocation,omitempty"`
	PromotedTweetInfo        *PromotedTweetInfo          `protobuf:"bytes,3,opt,name=promotedTweetInfo" json:"promotedTweetInfo,omitempty"`
	AdvertiserInfo           *AdvertiserInfo             `protobuf:"bytes,4,opt,name=advertiserInfo" json:"advertiserInfo,omitempty"`
	MatchedTargetingCriteria []*MatchedTargetingCriteria `protobuf:"bytes,5,rep,name=matchedTargetingCriteria" json:"matchedTargetingCriteria,omitempty"`
	ImpressionTime           string                      `protobuf:"bytes,6,opt,name=impressionTime" json:"impressionTime,omitempty"`
}

func (m *Impressions) Reset()                    { *m = Impressions{} }
func (m *Impressions) String() string            { return proto.CompactTextString(m) }
func (*Impressions) ProtoMessage()               {}
func (*Impressions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *Impressions) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *Impressions) GetDisplayLocation() string {
	if m != nil {
		return m.DisplayLocation
	}
	return ""
}

func (m *Impressions) GetPromotedTweetInfo() *PromotedTweetInfo {
	if m != nil {
		return m.PromotedTweetInfo
	}
	return nil
}

func (m *Impressions) GetAdvertiserInfo() *AdvertiserInfo {
	if m != nil {
		return m.AdvertiserInfo
	}
	return nil
}

func (m *Impressions) GetMatchedTargetingCriteria() []*MatchedTargetingCriteria {
	if m != nil {
		return m.MatchedTargetingCriteria
	}
	return nil
}

func (m *Impressions) GetImpressionTime() string {
	if m != nil {
		return m.ImpressionTime
	}
	return ""
}

type EngagementAttributes struct {
	EngagementTime string `protobuf:"bytes,1,opt,name=engagementTime" json:"engagementTime,omitempty"`
	EngagementType string `protobuf:"bytes,2,opt,name=engagementType" json:"engagementType,omitempty"`
}

func (m *EngagementAttributes) Reset()                    { *m = EngagementAttributes{} }
func (m *EngagementAttributes) String() string            { return proto.CompactTextString(m) }
func (*EngagementAttributes) ProtoMessage()               {}
func (*EngagementAttributes) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *EngagementAttributes) GetEngagementTime() string {
	if m != nil {
		return m.EngagementTime
	}
	return ""
}

func (m *EngagementAttributes) GetEngagementType() string {
	if m != nil {
		return m.EngagementType
	}
	return ""
}

type AdImpressions struct {
	Impressions []*Impressions `protobuf:"bytes,1,rep,name=impressions" json:"impressions,omitempty"`
}

func (m *AdImpressions) Reset()                    { *m = AdImpressions{} }
func (m *AdImpressions) String() string            { return proto.CompactTextString(m) }
func (*AdImpressions) ProtoMessage()               {}
func (*AdImpressions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *AdImpressions) GetImpressions() []*Impressions {
	if m != nil {
		return m.Impressions
	}
	return nil
}

type Engagements struct {
	ImpressionAttributes *Impressions            `protobuf:"bytes,1,opt,name=impressionAttributes" json:"impressionAttributes,omitempty"`
	EngagementAttributes []*EngagementAttributes `protobuf:"bytes,2,rep,name=engagementAttributes" json:"engagementAttributes,omitempty"`
}

func (m *Engagements) Reset()                    { *m = Engagements{} }
func (m *Engagements) String() string            { return proto.CompactTextString(m) }
func (*Engagements) ProtoMessage()               {}
func (*Engagements) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *Engagements) GetImpressionAttributes() *Impressions {
	if m != nil {
		return m.ImpressionAttributes
	}
	return nil
}

func (m *Engagements) GetEngagementAttributes() []*EngagementAttributes {
	if m != nil {
		return m.EngagementAttributes
	}
	return nil
}

type AdEngagements struct {
	Engagements []*Engagements `protobuf:"bytes,1,rep,name=engagements" json:"engagements,omitempty"`
}

func (m *AdEngagements) Reset()                    { *m = AdEngagements{} }
func (m *AdEngagements) String() string            { return proto.CompactTextString(m) }
func (*AdEngagements) ProtoMessage()               {}
func (*AdEngagements) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *AdEngagements) GetEngagements() []*Engagements {
	if m != nil {
		return m.Engagements
	}
	return nil
}

type AdsUserData struct {
	AdEngagements *AdEngagements `protobuf:"bytes,1,opt,name=adEngagements" json:"adEngagements,omitempty"`
	AdImpressions *AdImpressions `protobuf:"bytes,2,opt,name=adImpressions" json:"adImpressions,omitempty"`
}

func (m *AdsUserData) Reset()                    { *m = AdsUserData{} }
func (m *AdsUserData) String() string            { return proto.CompactTextString(m) }
func (*AdsUserData) ProtoMessage()               {}
func (*AdsUserData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *AdsUserData) GetAdEngagements() *AdEngagements {
	if m != nil {
		return m.AdEngagements
	}
	return nil
}

func (m *AdsUserData) GetAdImpressions() *AdImpressions {
	if m != nil {
		return m.AdImpressions
	}
	return nil
}

type Ad struct {
	AdsUserData *AdsUserData `protobuf:"bytes,1,opt,name=adsUserData" json:"adsUserData,omitempty"`
}

func (m *Ad) Reset()                    { *m = Ad{} }
func (m *Ad) String() string            { return proto.CompactTextString(m) }
func (*Ad) ProtoMessage()               {}
func (*Ad) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *Ad) GetAdsUserData() *AdsUserData {
	if m != nil {
		return m.AdsUserData
	}
	return nil
}

type AdEntry struct {
	Ad *Ad `protobuf:"bytes,1,opt,name=ad" json:"ad,omitempty"`
}

func (m *AdEntry) Reset()                    { *m = AdEntry{} }
func (m *AdEntry) String() string            { return proto.CompactTextString(m) }
func (*AdEntry) ProtoMessage()               {}
func (*AdEntry) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *AdEntry) GetAd() *Ad {
	if m != nil {
		return m.Ad
	}
	return nil
}

func init() {
	proto.RegisterType((*DeviceInfo)(nil), "grain.twitter.DeviceInfo")
	proto.RegisterType((*PromotedTweetInfo)(nil), "grain.twitter.PromotedTweetInfo")
	proto.RegisterType((*AdvertiserInfo)(nil), "grain.twitter.AdvertiserInfo")
	proto.RegisterType((*MatchedTargetingCriteria)(nil), "grain.twitter.MatchedTargetingCriteria")
	proto.RegisterType((*Impressions)(nil), "grain.twitter.Impressions")
	proto.RegisterType((*EngagementAttributes)(nil), "grain.twitter.EngagementAttributes")
	proto.RegisterType((*AdImpressions)(nil), "grain.twitter.AdImpressions")
	proto.RegisterType((*Engagements)(nil), "grain.twitter.Engagements")
	proto.RegisterType((*AdEngagements)(nil), "grain.twitter.AdEngagements")
	proto.RegisterType((*AdsUserData)(nil), "grain.twitter.AdsUserData")
	proto.RegisterType((*Ad)(nil), "grain.twitter.Ad")
	proto.RegisterType((*AdEntry)(nil), "grain.twitter.AdEntry")
}

func init() { proto.RegisterFile("twitter/ad.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcd, 0x6e, 0x13, 0x31,
	0x18, 0x54, 0x76, 0x4b, 0xab, 0x7c, 0xab, 0x14, 0x62, 0x45, 0xc8, 0xa0, 0x82, 0xc2, 0x52, 0x41,
	0x0e, 0x28, 0x48, 0xe5, 0x84, 0xd4, 0x4b, 0x42, 0x7b, 0xa8, 0x44, 0x23, 0x64, 0xa5, 0x80, 0xb8,
	0x39, 0xf1, 0xd7, 0xd4, 0x52, 0xf6, 0x47, 0xb6, 0xd3, 0x92, 0x03, 0x8f, 0x01, 0x8f, 0xc2, 0xf3,
	0xa1, 0x75, 0x36, 0x59, 0xaf, 0x93, 0x70, 0x5b, 0x8f, 0xbf, 0x19, 0x8f, 0x67, 0x9c, 0xc0, 0x13,
	0xf3, 0x20, 0x8d, 0x41, 0xf5, 0x9e, 0x8b, 0x7e, 0xae, 0x32, 0x93, 0x91, 0xd6, 0x4c, 0x71, 0x99,
	0xf6, 0x4b, 0x3c, 0x3e, 0x05, 0xb8, 0xc0, 0x7b, 0x39, 0xc5, 0xab, 0xf4, 0x36, 0x23, 0x4f, 0xe1,
	0x30, 0xd3, 0xe3, 0x65, 0x8e, 0xb4, 0xd1, 0x6d, 0xf4, 0x9a, 0xac, 0x5c, 0xc5, 0xbf, 0xa0, 0xfd,
	0x45, 0x65, 0x49, 0x66, 0x50, 0x8c, 0x1f, 0x10, 0x8d, 0x1d, 0xa6, 0x70, 0x64, 0xec, 0x42, 0xd8,
	0xe9, 0x90, 0xad, 0x97, 0xe4, 0x04, 0x9a, 0xf6, 0x73, 0x8c, 0x3f, 0x0d, 0x0d, 0xac, 0x52, 0x05,
	0x10, 0x02, 0x07, 0x0b, 0x35, 0xd7, 0x34, 0xec, 0x86, 0xbd, 0x26, 0xb3, 0xdf, 0x05, 0x23, 0x41,
	0x21, 0xf9, 0x4d, 0xb1, 0x71, 0x60, 0x37, 0x2a, 0x20, 0xfe, 0x0e, 0xc7, 0x03, 0x71, 0x8f, 0xca,
	0x48, 0x8d, 0xca, 0x9e, 0xfd, 0x06, 0x8e, 0xf9, 0x06, 0x19, 0xf1, 0x64, 0x6d, 0xd8, 0x43, 0xc9,
	0x4b, 0x00, 0x3d, 0x55, 0x88, 0xa9, 0x9d, 0x59, 0x59, 0x71, 0x90, 0xf8, 0x0e, 0xe8, 0x35, 0x37,
	0xd3, 0x3b, 0x14, 0x63, 0xae, 0x66, 0x68, 0x64, 0x3a, 0xfb, 0xa4, 0xa4, 0x41, 0x25, 0x39, 0x39,
	0x85, 0x96, 0x59, 0x83, 0x4e, 0x26, 0x75, 0xb0, 0x70, 0xb2, 0x01, 0xbe, 0xf2, 0xf9, 0x62, 0x7d,
	0x8a, 0x87, 0xc6, 0x7f, 0x42, 0x88, 0xae, 0x92, 0x5c, 0xa1, 0xd6, 0x32, 0x4b, 0x35, 0xf9, 0x08,
	0x20, 0x36, 0xc1, 0x5b, 0xe9, 0xe8, 0xec, 0x59, 0xbf, 0x56, 0x4e, 0xbf, 0x6a, 0x86, 0x39, 0xc3,
	0xa4, 0x07, 0x8f, 0x85, 0xd4, 0xf9, 0x9c, 0x2f, 0x3f, 0x67, 0x53, 0x6e, 0x64, 0x96, 0x96, 0x67,
	0xfa, 0x30, 0x19, 0x41, 0x3b, 0xf7, 0x7b, 0xa3, 0xa1, 0x3d, 0xab, 0xeb, 0x9d, 0xb5, 0xd5, 0x2f,
	0xdb, 0xa6, 0x92, 0x4b, 0x37, 0x76, 0x2b, 0x76, 0x60, 0xc5, 0x5e, 0x78, 0x62, 0xf5, 0xb6, 0x98,
	0x47, 0x22, 0x53, 0xa0, 0xc9, 0x9e, 0xd4, 0xe9, 0xa3, 0x6e, 0xd8, 0x8b, 0xce, 0xde, 0x7a, 0x82,
	0xfb, 0x4a, 0x62, 0x7b, 0x85, 0x8a, 0x62, 0xe4, 0x26, 0xef, 0xb1, 0x4c, 0x90, 0x1e, 0xae, 0x8a,
	0xa9, 0xa3, 0xf1, 0x2d, 0x74, 0x2e, 0xd3, 0x19, 0x9f, 0x61, 0x82, 0xa9, 0x19, 0x18, 0xa3, 0xe4,
	0x64, 0x61, 0x50, 0x17, 0x7c, 0xdc, 0xe0, 0x96, 0x5f, 0x3e, 0xb1, 0x3a, 0xea, 0xcd, 0x15, 0xef,
	0x24, 0xd8, 0x9a, 0x2b, 0x7e, 0x43, 0xd7, 0xd0, 0x1a, 0x08, 0xf7, 0x05, 0x9c, 0x43, 0x54, 0x59,
	0xd1, 0xb4, 0x61, 0x2f, 0xfe, 0xdc, 0xbb, 0xb8, 0x43, 0x60, 0xee, 0x78, 0xfc, 0xb7, 0x01, 0x51,
	0xe5, 0x5b, 0x93, 0x11, 0x74, 0xaa, 0xed, 0xea, 0x1a, 0xe5, 0xcb, 0xfa, 0x9f, 0xec, 0x4e, 0x1e,
	0xf9, 0x06, 0x1d, 0xdc, 0x11, 0x0b, 0x0d, 0xac, 0xcd, 0xd7, 0x9e, 0xde, 0xae, 0x04, 0xd9, 0x4e,
	0x81, 0x55, 0x0e, 0xae, 0xf3, 0x73, 0x88, 0xaa, 0xc1, 0x7d, 0x39, 0x38, 0x04, 0xe6, 0x8e, 0xc7,
	0xbf, 0x1b, 0x10, 0x0d, 0x84, 0xbe, 0xd1, 0xa8, 0x2e, 0xb8, 0xe1, 0x64, 0x08, 0x2d, 0xee, 0xca,
	0x97, 0x01, 0x9c, 0x6c, 0xbd, 0x50, 0x57, 0xb1, 0x4e, 0x59, 0x69, 0x38, 0x11, 0xd9, 0x46, 0x77,
	0x69, 0xb8, 0x31, 0xd6, 0x29, 0xf1, 0x10, 0x82, 0x81, 0x28, 0xee, 0xc6, 0x2b, 0x73, 0x7b, 0xca,
	0x70, 0xec, 0x33, 0x77, 0x3c, 0x7e, 0x07, 0x47, 0x85, 0x4f, 0xa3, 0x96, 0xe4, 0x15, 0x04, 0x5c,
	0x94, 0xfc, 0xf6, 0x16, 0x9f, 0x05, 0x5c, 0x0c, 0xa3, 0x1f, 0xcd, 0x12, 0xc9, 0x27, 0x93, 0x43,
	0xfb, 0x6f, 0xff, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x47, 0x49, 0xc5, 0x01, 0x06,
	0x00, 0x00,
}
