// Code generated by protoc-gen-go. DO NOT EDIT.
// source: twitter/archive.proto

package twitterpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Archive struct {
	Lists          []*List               `protobuf:"bytes,1,rep,name=lists" json:"lists,omitempty"`
	Friends        []*User               `protobuf:"bytes,2,rep,name=friends" json:"friends,omitempty"`
	Followers      []*User               `protobuf:"bytes,3,rep,name=followers" json:"followers,omitempty"`
	Timeline       []*Tweet              `protobuf:"bytes,4,rep,name=timeline" json:"timeline,omitempty"`
	Favorites      []*Tweet              `protobuf:"bytes,5,rep,name=favorites" json:"favorites,omitempty"`
	DirectMessages []*DirectMessageEvent `protobuf:"bytes,6,rep,name=direct_messages,json=directMessages" json:"direct_messages,omitempty"`
	// Start of the official archive
	AccountCreationIps []*AccountCreationIpsEntry `protobuf:"bytes,7,rep,name=account_creation_ips,json=accountCreationIps" json:"account_creation_ips,omitempty"`
	Accounts           []*AccountEntry            `protobuf:"bytes,8,rep,name=accounts" json:"accounts,omitempty"`
	AdEngagements      []*AdEntry                 `protobuf:"bytes,9,rep,name=ad_engagements,json=adEngagements" json:"ad_engagements,omitempty"`
	AdImpressions      []*AdEntry                 `protobuf:"bytes,10,rep,name=ad_impressions,json=adImpressions" json:"ad_impressions,omitempty"`
}

func (m *Archive) Reset()                    { *m = Archive{} }
func (m *Archive) String() string            { return proto.CompactTextString(m) }
func (*Archive) ProtoMessage()               {}
func (*Archive) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Archive) GetLists() []*List {
	if m != nil {
		return m.Lists
	}
	return nil
}

func (m *Archive) GetFriends() []*User {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *Archive) GetFollowers() []*User {
	if m != nil {
		return m.Followers
	}
	return nil
}

func (m *Archive) GetTimeline() []*Tweet {
	if m != nil {
		return m.Timeline
	}
	return nil
}

func (m *Archive) GetFavorites() []*Tweet {
	if m != nil {
		return m.Favorites
	}
	return nil
}

func (m *Archive) GetDirectMessages() []*DirectMessageEvent {
	if m != nil {
		return m.DirectMessages
	}
	return nil
}

func (m *Archive) GetAccountCreationIps() []*AccountCreationIpsEntry {
	if m != nil {
		return m.AccountCreationIps
	}
	return nil
}

func (m *Archive) GetAccounts() []*AccountEntry {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *Archive) GetAdEngagements() []*AdEntry {
	if m != nil {
		return m.AdEngagements
	}
	return nil
}

func (m *Archive) GetAdImpressions() []*AdEntry {
	if m != nil {
		return m.AdImpressions
	}
	return nil
}

func init() {
	proto.RegisterType((*Archive)(nil), "grain.twitter.Archive")
}

func init() { proto.RegisterFile("twitter/archive.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x4f, 0xdb, 0x30,
	0x18, 0x87, 0xb5, 0xf5, 0x6f, 0x5c, 0xb5, 0x9b, 0xdc, 0x6e, 0xb2, 0xba, 0xcb, 0xba, 0xc3, 0xb4,
	0x1d, 0x96, 0x6d, 0xdd, 0x61, 0x27, 0x0e, 0x05, 0x7a, 0x28, 0x82, 0x4b, 0x04, 0x12, 0xe2, 0x12,
	0xb9, 0xf1, 0xdb, 0x60, 0x29, 0xb1, 0x23, 0xbf, 0x6e, 0x2b, 0x3e, 0x2a, 0xdf, 0x06, 0x35, 0x4e,
	0x1a, 0x08, 0x05, 0xae, 0x8f, 0x9f, 0xe7, 0xa7, 0x58, 0x31, 0xf9, 0x64, 0xb7, 0xd2, 0x5a, 0x30,
	0xbf, 0xb9, 0x89, 0x6e, 0xe5, 0x06, 0xfc, 0xcc, 0x68, 0xab, 0x69, 0x3f, 0x36, 0x5c, 0x2a, 0xbf,
	0x38, 0x1c, 0x57, 0x56, 0x14, 0xe9, 0xb5, 0xb2, 0xce, 0x1a, 0x4f, 0x6a, 0x38, 0x8c, 0x0c, 0x70,
	0x2b, 0xb5, 0x0a, 0x65, 0x56, 0x28, 0x1f, 0xf7, 0x8a, 0xa8, 0x13, 0x91, 0x16, 0x84, 0x96, 0x24,
	0x91, 0x58, 0x4e, 0x0f, 0x4b, 0x66, 0xb7, 0x00, 0xb6, 0x2e, 0xae, 0x11, 0x8c, 0x63, 0xdf, 0xee,
	0x9b, 0xa4, 0x33, 0x73, 0xdf, 0x4e, 0x7f, 0x92, 0xd6, 0x6e, 0x02, 0xd9, 0xbb, 0xaf, 0x8d, 0x1f,
	0xbd, 0xe9, 0xd0, 0x7f, 0x72, 0x0b, 0xff, 0x5c, 0xa2, 0x0d, 0x9c, 0x41, 0x7f, 0x91, 0xce, 0xca,
	0x48, 0x50, 0x02, 0xd9, 0xfb, 0x83, 0xf2, 0x15, 0x82, 0x09, 0x4a, 0x87, 0xfe, 0x25, 0xde, 0x4a,
	0x27, 0x89, 0xde, 0x82, 0x41, 0xd6, 0x78, 0x39, 0xa8, 0x2c, 0xfa, 0x87, 0x74, 0xad, 0x4c, 0x21,
	0x91, 0x0a, 0x58, 0x33, 0x2f, 0x46, 0xb5, 0xe2, 0x72, 0x77, 0xb5, 0x60, 0x6f, 0xd1, 0x29, 0xf1,
	0x56, 0x7c, 0xa3, 0x8d, 0xb4, 0x80, 0xac, 0xf5, 0x4a, 0x52, 0x69, 0xf4, 0x8c, 0x7c, 0x10, 0xd2,
	0x40, 0x64, 0xc3, 0x14, 0x10, 0x79, 0x0c, 0xc8, 0xda, 0x79, 0x39, 0xa9, 0x95, 0xa7, 0xb9, 0x75,
	0xe1, 0xa4, 0xf9, 0x06, 0x94, 0x0d, 0x06, 0xe2, 0x31, 0x43, 0x7a, 0x4d, 0x46, 0x07, 0x7e, 0x24,
	0xb2, 0x4e, 0x3e, 0xf8, 0xbd, 0x36, 0x38, 0x73, 0xea, 0x49, 0x61, 0x2e, 0x32, 0x9c, 0x2b, 0x6b,
	0xee, 0x02, 0xca, 0x9f, 0x1d, 0xd0, 0xff, 0xa4, 0x5b, 0x50, 0x64, 0xdd, 0x7c, 0xed, 0xcb, 0xe1,
	0x35, 0x37, 0xb1, 0x97, 0xe9, 0x11, 0x19, 0x70, 0x11, 0x82, 0x8a, 0x79, 0x0c, 0x29, 0xec, 0x72,
	0x2f, 0xcf, 0x3f, 0xd7, 0x73, 0xe1, 0xca, 0x3e, 0x17, 0xf3, 0x4a, 0x2e, 0x72, 0x99, 0x66, 0x06,
	0x10, 0xa5, 0x56, 0xc8, 0xc8, 0x5b, 0xf9, 0xa2, 0x92, 0x8f, 0x7b, 0x37, 0x5e, 0x61, 0x64, 0xcb,
	0x65, 0x3b, 0x7f, 0x6f, 0xff, 0x1e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x20, 0x76, 0x8e, 0x32,
	0x03, 0x00, 0x00,
}
