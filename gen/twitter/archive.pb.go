// Code generated by protoc-gen-go. DO NOT EDIT.
// source: twitter/archive.proto

package twitterpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Archive struct {
	Lists          []*List               `protobuf:"bytes,1,rep,name=lists" json:"lists,omitempty"`
	Friends        []*User               `protobuf:"bytes,2,rep,name=friends" json:"friends,omitempty"`
	Followers      []*User               `protobuf:"bytes,3,rep,name=followers" json:"followers,omitempty"`
	Timeline       []*Tweet              `protobuf:"bytes,4,rep,name=timeline" json:"timeline,omitempty"`
	Favorites      []*Tweet              `protobuf:"bytes,5,rep,name=favorites" json:"favorites,omitempty"`
	DirectMessages []*DirectMessageEvent `protobuf:"bytes,6,rep,name=direct_messages,json=directMessages" json:"direct_messages,omitempty"`
	// Start of the official archive
	AccountCreationIps []*AccountCreationIpsEntry `protobuf:"bytes,7,rep,name=account_creation_ips,json=accountCreationIps" json:"account_creation_ips,omitempty"`
	Accounts           []*AccountEntry            `protobuf:"bytes,8,rep,name=accounts" json:"accounts,omitempty"`
	AdEngagements      []*AdEntry                 `protobuf:"bytes,9,rep,name=ad_engagements,json=adEngagements" json:"ad_engagements,omitempty"`
	AdImpressions      []*AdEntry                 `protobuf:"bytes,10,rep,name=ad_impressions,json=adImpressions" json:"ad_impressions,omitempty"`
	Ageinfos           []*AgeinfoEntry            `protobuf:"bytes,11,rep,name=ageinfos" json:"ageinfos,omitempty"`
}

func (m *Archive) Reset()                    { *m = Archive{} }
func (m *Archive) String() string            { return proto.CompactTextString(m) }
func (*Archive) ProtoMessage()               {}
func (*Archive) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Archive) GetLists() []*List {
	if m != nil {
		return m.Lists
	}
	return nil
}

func (m *Archive) GetFriends() []*User {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *Archive) GetFollowers() []*User {
	if m != nil {
		return m.Followers
	}
	return nil
}

func (m *Archive) GetTimeline() []*Tweet {
	if m != nil {
		return m.Timeline
	}
	return nil
}

func (m *Archive) GetFavorites() []*Tweet {
	if m != nil {
		return m.Favorites
	}
	return nil
}

func (m *Archive) GetDirectMessages() []*DirectMessageEvent {
	if m != nil {
		return m.DirectMessages
	}
	return nil
}

func (m *Archive) GetAccountCreationIps() []*AccountCreationIpsEntry {
	if m != nil {
		return m.AccountCreationIps
	}
	return nil
}

func (m *Archive) GetAccounts() []*AccountEntry {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *Archive) GetAdEngagements() []*AdEntry {
	if m != nil {
		return m.AdEngagements
	}
	return nil
}

func (m *Archive) GetAdImpressions() []*AdEntry {
	if m != nil {
		return m.AdImpressions
	}
	return nil
}

func (m *Archive) GetAgeinfos() []*AgeinfoEntry {
	if m != nil {
		return m.Ageinfos
	}
	return nil
}

func init() {
	proto.RegisterType((*Archive)(nil), "grain.twitter.Archive")
}

func init() { proto.RegisterFile("twitter/archive.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x3d, 0x0f, 0xd3, 0x30,
	0x10, 0x86, 0x05, 0xa5, 0x1f, 0x71, 0xd5, 0x82, 0xdc, 0x82, 0xac, 0xb2, 0x50, 0x06, 0x04, 0x03,
	0x01, 0xca, 0xc0, 0xc4, 0x50, 0xa0, 0x43, 0x11, 0x2c, 0x11, 0x48, 0x88, 0x25, 0x72, 0xe3, 0x4b,
	0xb0, 0x94, 0xd8, 0x91, 0xcf, 0x6d, 0xc5, 0xdf, 0xe0, 0x17, 0xa3, 0xda, 0x4e, 0x03, 0x21, 0xc0,
	0xfa, 0xde, 0xf3, 0xbc, 0xb9, 0x53, 0x4c, 0xee, 0xda, 0xb3, 0xb4, 0x16, 0xcc, 0x33, 0x6e, 0xb2,
	0x6f, 0xf2, 0x04, 0x71, 0x6d, 0xb4, 0xd5, 0x74, 0x56, 0x18, 0x2e, 0x55, 0x1c, 0x86, 0xab, 0x96,
	0xca, 0x32, 0x7d, 0x54, 0xd6, 0x53, 0xab, 0x75, 0x27, 0x4e, 0x33, 0x03, 0xdc, 0x4a, 0xad, 0x52,
	0x59, 0x07, 0xe4, 0xce, 0x15, 0x11, 0x21, 0x69, 0xbb, 0x0a, 0x90, 0x2a, 0xd7, 0x5d, 0x50, 0x54,
	0x21, 0xa1, 0x4d, 0x52, 0x4a, 0x6c, 0xbe, 0xb8, 0x68, 0x32, 0x7b, 0x06, 0xb0, 0x5d, 0xf0, 0x88,
	0x60, 0x7c, 0xf6, 0xf0, 0xc7, 0x90, 0x8c, 0xb7, 0xfe, 0x24, 0xfa, 0x84, 0x0c, 0x2f, 0x15, 0xc8,
	0x6e, 0x3c, 0x18, 0x3c, 0x9e, 0x6e, 0x16, 0xf1, 0x6f, 0xc7, 0xc5, 0x1f, 0x24, 0xda, 0xc4, 0x13,
	0xf4, 0x29, 0x19, 0xe7, 0x46, 0x82, 0x12, 0xc8, 0x6e, 0xf6, 0xc2, 0x9f, 0x11, 0x4c, 0xd2, 0x30,
	0xf4, 0x05, 0x89, 0x72, 0x5d, 0x96, 0xfa, 0x0c, 0x06, 0xd9, 0xe0, 0xef, 0x42, 0x4b, 0xd1, 0xe7,
	0x64, 0x62, 0x65, 0x05, 0xa5, 0x54, 0xc0, 0x6e, 0x39, 0x63, 0xd9, 0x31, 0x3e, 0x5d, 0x4e, 0x4b,
	0xae, 0x14, 0xdd, 0x90, 0x28, 0xe7, 0x27, 0x6d, 0xa4, 0x05, 0x64, 0xc3, 0x7f, 0x28, 0x2d, 0x46,
	0xdf, 0x93, 0xdb, 0x42, 0x1a, 0xc8, 0x6c, 0x5a, 0x01, 0x22, 0x2f, 0x00, 0xd9, 0xc8, 0x99, 0xeb,
	0x8e, 0xf9, 0xce, 0x51, 0x1f, 0x3d, 0xb4, 0x3b, 0x81, 0xb2, 0xc9, 0x5c, 0xfc, 0x9a, 0x21, 0xfd,
	0x42, 0x96, 0x3d, 0xff, 0x17, 0xd9, 0xd8, 0x15, 0x3e, 0xea, 0x14, 0x6e, 0x3d, 0xfa, 0x36, 0x90,
	0xfb, 0x1a, 0x77, 0xca, 0x9a, 0xef, 0x09, 0xe5, 0x7f, 0x0c, 0xe8, 0x2b, 0x32, 0x09, 0x29, 0xb2,
	0x89, 0x6b, 0xbb, 0xdf, 0xdf, 0xe6, 0x2b, 0xae, 0x30, 0x7d, 0x4d, 0xe6, 0x5c, 0xa4, 0xa0, 0x0a,
	0x5e, 0x40, 0x05, 0x17, 0x3d, 0x72, 0xfa, 0xbd, 0xae, 0x2e, 0xbc, 0x39, 0xe3, 0x62, 0xd7, 0xc2,
	0x41, 0x97, 0x55, 0x6d, 0x00, 0x51, 0x6a, 0x85, 0x8c, 0xfc, 0x4f, 0xdf, 0xb7, 0xb0, 0x5b, 0xdb,
	0xbf, 0x5d, 0x64, 0xd3, 0xfe, 0xb5, 0xfd, 0xb8, 0x59, 0x3b, 0xc0, 0x6f, 0xa6, 0x5f, 0xa3, 0x40,
	0xd4, 0x87, 0xc3, 0xc8, 0x3d, 0xd4, 0x97, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x6b, 0x19,
	0x1f, 0x82, 0x03, 0x00, 0x00,
}
