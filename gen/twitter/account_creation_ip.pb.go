// Code generated by protoc-gen-go. DO NOT EDIT.
// source: twitter/account_creation_ip.proto

package twitterpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AccountCreationIp struct {
	AccountId      string `protobuf:"bytes,1,opt,name=accountId" json:"accountId,omitempty"`
	UserCreationIp string `protobuf:"bytes,2,opt,name=userCreationIp" json:"userCreationIp,omitempty"`
}

func (m *AccountCreationIp) Reset()                    { *m = AccountCreationIp{} }
func (m *AccountCreationIp) String() string            { return proto.CompactTextString(m) }
func (*AccountCreationIp) ProtoMessage()               {}
func (*AccountCreationIp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *AccountCreationIp) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AccountCreationIp) GetUserCreationIp() string {
	if m != nil {
		return m.UserCreationIp
	}
	return ""
}

type AccountCreationIpsEntry struct {
	AccountCreationIp *AccountCreationIp `protobuf:"bytes,1,opt,name=accountCreationIp" json:"accountCreationIp,omitempty"`
}

func (m *AccountCreationIpsEntry) Reset()                    { *m = AccountCreationIpsEntry{} }
func (m *AccountCreationIpsEntry) String() string            { return proto.CompactTextString(m) }
func (*AccountCreationIpsEntry) ProtoMessage()               {}
func (*AccountCreationIpsEntry) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *AccountCreationIpsEntry) GetAccountCreationIp() *AccountCreationIp {
	if m != nil {
		return m.AccountCreationIp
	}
	return nil
}

func init() {
	proto.RegisterType((*AccountCreationIp)(nil), "grain.twitter.AccountCreationIp")
	proto.RegisterType((*AccountCreationIpsEntry)(nil), "grain.twitter.AccountCreationIpsEntry")
}

func init() { proto.RegisterFile("twitter/account_creation_ip.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2c, 0x29, 0xcf, 0x2c,
	0x29, 0x49, 0x2d, 0xd2, 0x4f, 0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0x89, 0x4f, 0x2e, 0x4a, 0x4d,
	0x2c, 0xc9, 0xcc, 0xcf, 0x8b, 0xcf, 0x2c, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4d,
	0x2f, 0x4a, 0xcc, 0xcc, 0xd3, 0x83, 0x2a, 0x54, 0x8a, 0xe4, 0x12, 0x74, 0x84, 0xa8, 0x75, 0x86,
	0x2a, 0xf5, 0x2c, 0x10, 0x92, 0xe1, 0xe2, 0x84, 0x1a, 0xe0, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8,
	0xc1, 0x19, 0x84, 0x10, 0x10, 0x52, 0xe3, 0xe2, 0x2b, 0x2d, 0x4e, 0x2d, 0x42, 0xa8, 0x97, 0x60,
	0x02, 0x2b, 0x41, 0x13, 0x55, 0xca, 0xe4, 0x12, 0xc7, 0x30, 0xba, 0xd8, 0x35, 0xaf, 0xa4, 0xa8,
	0x52, 0xc8, 0x8f, 0x4b, 0x30, 0x11, 0x5d, 0x0a, 0x6c, 0x11, 0xb7, 0x91, 0x82, 0x1e, 0x8a, 0x03,
	0xf5, 0x30, 0x8c, 0x08, 0xc2, 0xd4, 0xea, 0xc4, 0x1d, 0xc5, 0x09, 0x55, 0x5f, 0x90, 0x94, 0xc4,
	0x06, 0xf6, 0xa8, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x02, 0x15, 0xc5, 0xda, 0x0d, 0x01, 0x00,
	0x00,
}
