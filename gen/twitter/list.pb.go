// Code generated by protoc-gen-go. DO NOT EDIT.
// source: twitter/list.proto

package twitterpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type List struct {
	Slug            string  `protobuf:"bytes,1,opt,name=slug" json:"slug,omitempty"`
	Name            string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Uri             string  `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	CreatedAt       string  `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Id              int64   `protobuf:"varint,5,opt,name=id" json:"id,omitempty"`
	SubscriberCount int64   `protobuf:"varint,6,opt,name=subscriber_count,json=subscriberCount" json:"subscriber_count,omitempty"`
	MemberCount     int64   `protobuf:"varint,7,opt,name=member_count,json=memberCount" json:"member_count,omitempty"`
	Mode            string  `protobuf:"bytes,8,opt,name=mode" json:"mode,omitempty"`
	FullName        string  `protobuf:"bytes,9,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	Description     string  `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	User            *User   `protobuf:"bytes,11,opt,name=user" json:"user,omitempty"`
	Following       bool    `protobuf:"varint,12,opt,name=following" json:"following,omitempty"`
	Members         []*User `protobuf:"bytes,13,rep,name=members" json:"members,omitempty"`
}

func (m *List) Reset()                    { *m = List{} }
func (m *List) String() string            { return proto.CompactTextString(m) }
func (*List) ProtoMessage()               {}
func (*List) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *List) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *List) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *List) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *List) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *List) GetSubscriberCount() int64 {
	if m != nil {
		return m.SubscriberCount
	}
	return 0
}

func (m *List) GetMemberCount() int64 {
	if m != nil {
		return m.MemberCount
	}
	return 0
}

func (m *List) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *List) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *List) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *List) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *List) GetFollowing() bool {
	if m != nil {
		return m.Following
	}
	return false
}

func (m *List) GetMembers() []*User {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*List)(nil), "grain.twitter.List")
}

func init() { proto.RegisterFile("twitter/list.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0x95, 0x26, 0xb4, 0xf5, 0x4d, 0x0b, 0xd5, 0x65, 0xb1, 0xf8, 0x91, 0x0c, 0x0b, 0x61,
	0x20, 0x48, 0xf0, 0x04, 0xc0, 0x8a, 0x18, 0x22, 0xb1, 0xb0, 0x54, 0x49, 0xe3, 0x56, 0x96, 0x9c,
	0xb8, 0xf2, 0x8f, 0xfa, 0x06, 0x3c, 0x37, 0xb2, 0x1d, 0x08, 0x0c, 0x6c, 0x47, 0xdf, 0xf9, 0x94,
	0x1c, 0x5d, 0x03, 0xda, 0x83, 0xb0, 0x96, 0xeb, 0x7b, 0x29, 0x8c, 0x2d, 0xf7, 0x5a, 0x59, 0x85,
	0xcb, 0x9d, 0xae, 0x45, 0x5f, 0x0e, 0xcd, 0xd9, 0x8f, 0xe2, 0x0c, 0xd7, 0x51, 0xb9, 0xfe, 0x4c,
	0x21, 0x7b, 0x15, 0xc6, 0x22, 0x42, 0x66, 0xa4, 0xdb, 0xd1, 0x84, 0x25, 0x05, 0xa9, 0x42, 0xf6,
	0xac, 0xaf, 0x3b, 0x4e, 0x27, 0x91, 0xf9, 0x8c, 0x2b, 0x48, 0x9d, 0x16, 0x34, 0x0d, 0xc8, 0x47,
	0xbc, 0x04, 0xd8, 0x68, 0x5e, 0x5b, 0xde, 0xae, 0x6b, 0x4b, 0xb3, 0x50, 0x90, 0x81, 0x3c, 0x59,
	0x3c, 0x86, 0x89, 0x68, 0xe9, 0x11, 0x4b, 0x8a, 0xb4, 0x9a, 0x88, 0x16, 0x6f, 0x61, 0x65, 0x5c,
	0x63, 0x36, 0x5a, 0x34, 0x5c, 0xaf, 0x37, 0xca, 0xf5, 0x96, 0x4e, 0x43, 0x7b, 0x32, 0xf2, 0x17,
	0x8f, 0xf1, 0x0a, 0x16, 0x1d, 0xef, 0x46, 0x6d, 0x16, 0xb4, 0x3c, 0xb2, 0xa8, 0x20, 0x64, 0x9d,
	0x6a, 0x39, 0x9d, 0xc7, 0x89, 0x3e, 0xe3, 0x39, 0x90, 0xad, 0x93, 0x72, 0x1d, 0xb6, 0x93, 0x50,
	0xcc, 0x3d, 0x78, 0xf3, 0xfb, 0x19, 0xe4, 0x2d, 0xf7, 0x7f, 0xd9, 0x5b, 0xa1, 0x7a, 0x0a, 0xa1,
	0xfe, 0x8d, 0xf0, 0x06, 0x32, 0x7f, 0x20, 0x9a, 0xb3, 0xa4, 0xc8, 0x1f, 0x4e, 0xcb, 0x3f, 0x47,
	0x2c, 0xdf, 0x0d, 0xd7, 0x55, 0x10, 0xf0, 0x02, 0xc8, 0x56, 0x49, 0xa9, 0x0e, 0xa2, 0xdf, 0xd1,
	0x05, 0x4b, 0x8a, 0x79, 0x35, 0x02, 0xbc, 0x83, 0x59, 0x1c, 0x6a, 0xe8, 0x92, 0xa5, 0xff, 0x7d,
	0xe9, 0xdb, 0x79, 0xce, 0x3f, 0xc8, 0x50, 0xec, 0x9b, 0x66, 0x1a, 0x1e, 0xe7, 0xf1, 0x2b, 0x00,
	0x00, 0xff, 0xff, 0x98, 0x54, 0xe2, 0xff, 0xd5, 0x01, 0x00, 0x00,
}
